(use-package "FFI")
(load "../clisp-wrappers/wxCL.lisp")
(load "../clisp-wrappers/constants.lisp")
(load "../clisp-wrappers/wx_wrapper.lisp")
(load "../clisp-wrappers/wx_main.lisp")
(load "../clisp-wrappers/wxImage.lisp")
(load "../clisp-wrappers/wxWindow.lisp")
(load "../clisp-wrappers/wxFrame.lisp")
(load "../clisp-wrappers/wxMenuItem.lisp")
(load "../clisp-wrappers/wxMenu.lisp")
(load "../clisp-wrappers/wxMenuBar.lisp")
(load "../clisp-wrappers/wxEvent.lisp")
(load "../clisp-wrappers/wxEvtHandler.lisp")
(load "../clisp-wrappers/wxFileDialog.lisp")
(load "../clisp-wrappers/wxDialog.lisp")
(load "../clisp-wrappers/wxIcon.lisp")
(load "../clisp-wrappers/wxBitmap.lisp")
(load "../clisp-wrappers/wxMessageDialog.lisp")
(load "../clisp-wrappers/wxToolBar.lisp")
(load "../clisp-wrappers/wxStatusBar.lisp")
(load "../clisp-wrappers/wxTextctrl.lisp")

(use-package :wxImage)
(use-package :wxCL)
(use-package :wxEvent)
(use-package :wx_main)
(use-package :wxFrame)
(use-package :wx_wrapper)
(use-package :wxWindow)
(use-package :wxFileDialog)
(use-package :wxDialog)
(use-package :wxMessageDialog)
(use-package :wxEvtHandler)
(use-package :wxMenu)
(use-package :wxMenuBar)
(use-package :wxDialog)
(use-package :wxStatusBar)
(use-package :wxToolBar)
(use-package :wxIcon)
(use-package :wxBitmap)
(use-package :wxTextctrl)

(ffi:default-foreign-language :c)

(defconstant +OPEN-COMMAND-ID+ 30001)
(defconstant +SAVE-COMMAND-ID+ 30002)
(defconstant +SAVE-AS-COMMAND-ID+ 30003)
(defconstant +QUIT-COMMAND-ID+ 30004)

(defun add-menu (frame)
  (let ((file-menu (create-menu ()
				(:id +OPEN-COMMAND-ID+ :item "&Open ..." :helpString "Open a new file")
				(:id +SAVE-COMMAND-ID+ :item "&Save" :helpString "Save file")
				(:id +SAVE-AS-COMMAND-ID+ :item "Save &As ..." :helpString "Save file with a different name")
				(:kind wxITEM_SEPARATOR)
				(:id +QUIT-COMMAND-ID+ :item "&Quit" :helpString "Quit the text editor"))))
    (wxframe_setmenubar frame 
			(wxMenuBar_CreateWithMenus (vector file-menu)
						   (vector "&File")))))

(defun test-closure (fun data evt)
  (let (frame ic txtEd)
    (setf frame (wxFrame_create nil -1 "Simple Text Editor" 10 10 500 500 wxDEFAULT_FRAME_STYLE))
    (add-menu frame)
    (setf txtEd (wxTextCtrl_Create frame -1 "" 0 0 100 100  wxTE_MULTILINE))
    (wxFrame_SetIcon frame (wxicon_createload "ImageViewer.ico" wxBITMAP_TYPE_ICO -1 -1))
    (wxWindow_Show frame)))

;;; Creates the closure
(setf x (wxClosure_Create #'test-closure nil))

;;;Starts execution
(Eljapp_initializeC x 0 nil)
